---
# Program Function:
#   Upgrade gerrit application
# Related git repository:
#   1. IT/gerrit/gerrit/master------------------------------->Strorage gerrit-<version>.war
# Usage:
#   1. cd path/to/environmet/
#   2. ansible-playbook -e target_host=<target_host_ip> -e gerrit_war_version=<gerrit_version> ../upgrade_gerrit_master.yml
# Reindex gerrit log will be  storaged in /gerrit/logs/reindex_log_`date +%m_%e_%Y`.

- name: upgrade gerrit master
  hosts: "{{ target_host }}"
  roles:
  - common
  - gerrit

  tasks:
#   - name: Verify if gerrit service is installed
#     become: yes
#     stat:
#       path: "{{ gerrit_home }}/gerrit/bin/gerrit.sh"
#     register: gerrit_check
#
#   - name: stop gerrit service
#     become: yes
#     command: "{{ gerrit_home }}/gerrit/bin/gerrit.sh stop"
#     when: gerrit_check.stat.exists == True
#
#   - name: clean /gerrit/scratch/gerrit
#     become: yes
#     become_user: "{{ gerrit_user }}"
#     file:
#       path: "{{ gerrit_home }}/scratch/gerrit"
#       state: absent

    - name: Create a folder for Gerrit wars
      become: yes
      become_user: "{{ gerrit_user }}"
      file:
        path: "{{ gerrit_home }}/scratch/gerrit"
        mode: 0755
        state: directory

    #After modified IT/gerrit/gerrit/master in command to add new gerrit war package
    - name: clone IT/gerrit/gerrit/master repository to get new gerrit war file
      become: yes
      become_user: "{{ gerrit_user }}"
      shell: "export PATH=/usr/local/bin:$PATH;git-lfs clone ssh://{{ gerrit_ssh_user }}@{{ gerrit_master_server }}:{{gerrit_master_port }}/IT/gerrit/gerrit/master {{ gerrit_home }}/scratch/gerrit"

    - name: check if "gerrit-{{ gerrit_war_version }}.war" is existed
      become: yes
      become_user: "{{ gerrit_user }}"
      stat:
        path: "{{ gerrit_home }}/scratch/gerrit/gerrit-{{ gerrit_war_version }}.war"
      register: gerrit_war_check      

    - name: Init gerrit with new gerrit war version
      become: yes
      become_user: "{{ gerrit_user }}"
      command: "{{ java_home }}/bin/java -jar {{ gerrit_home }}/scratch/gerrit/gerrit-{{ gerrit_war_version }}.war init  --batch --no-auto-start -d {{ gerrit_home }}/gerrit/ --install-plugin {{ item }}"
      with_items:
        - commit-message-length-validator
        - download-commands
        - hooks
        - replication
        - reviewnotes
        - singleusergroup
      tags: inittialize_gerrit
      when: gerrit_war_check.stat.exists == True

    - name: create /gerrit/log directory
      become: yes
      become_user: "{{ gerrit_user }}"
      file: 
        path: "{{ gerrit_home }}/logs"
        state: directory
        mode: 0755

    - name: Reindexing gerrit
      become: yes
      become_user: "{{ gerrit_user }}"
      become_method: sudo
      shell:  "{{ java_home }}/bin/java -jar {{ gerrit_home }}/scratch/gerrit/gerrit-{{ gerrit_war_version }}.war reindex -d {{ gerrit_home }}/gerrit/ >>{{ gerrit_home }}/logs/reindex_log_`date +%m_%e_%Y` 2>&1"

    - name: Make sure  index/gerrit_index.config file ready is ok.
      become: yes
      become_user: "{{ gerrit_user }}"
      lineinfile:
        dest: "{{ gerrit_home }}/gerrit/index/gerrit_index.config"
        state: present
        regexp: "ready = false"
        line: "        ready = true"
        backup: yes
      ignore_errors: yes
      tags: modify_index


    - name: restart gerrit master
      become: yes
      command: "{{ gerrit_home }}/gerrit/bin/gerrit.sh restart"
      tags: restart_gerrit
